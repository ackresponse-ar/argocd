name: Terraform CI/CD

## Github Actions
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Plan, Apply, and Destroy
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: "google-github-actions/auth@v2"
        with:
          project_id: "concepts-demo"
          credentials_json: ${{ secrets.NG_SA_KEY_GCLOUD }}

      # Setup Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      # Terraform init
      - name: Initialize Terraform
        run: terraform init

      # Terraform plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Terraform apply (Only on push events to main)
      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve tfplan

      - name: Port-forward ArgoCD Server
      run: |
        POD_NAME=$(kubectl get pod --namespace argocd --selector="app.kubernetes.io/name=argocd-server" --output jsonpath="{.items[0].metadata.name}")
        kubectl port-forward --namespace argocd $POD_NAME 8080:443 &
        sleep 5


      # Extract Argo CD admin password
      - name: Get Argo CD Admin Password
        id: argocd_password
        run: |
          export PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 --decode)
          echo "ARGOCD_PASSWORD=$PASSWORD" >> $GITHUB_ENV

      # Sync Argo CD Application
      - name: Sync Argo CD Application
        run: |
          kubectl port-forward svc/argocd-server -n argocd 8080:443 &
          sleep 5
          argocd login localhost:8080 --username admin --password $ARGOCD_PASSWORD --insecure
          argocd app sync portfolio-nextjs

      # Wait for 1 minute
      - name: Wait for 17 minute
        run: sleep 1000

      # Terraform destroy
      - name: Terraform Destroy
        if: github.event_name == 'push'
        run: terraform destroy -auto-approve
